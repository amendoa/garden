/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var files = __webpack_require__(1);

	files.keys().forEach(files);

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./components/form": 2,
		"./components/form.js": 2,
		"./components/lazy-load": 4,
		"./components/lazy-load.js": 4,
		"./components/modal": 7,
		"./components/modal.js": 7,
		"./components/notification": 9,
		"./components/notification.js": 9,
		"./components/validation": 10,
		"./components/validation.js": 10,
		"./components/validation/confirm": 15,
		"./components/validation/confirm.js": 15,
		"./components/validation/defaults": 13,
		"./components/validation/defaults.js": 13,
		"./components/validation/email": 18,
		"./components/validation/email.js": 18,
		"./components/validation/maxlength": 17,
		"./components/validation/maxlength.js": 17,
		"./components/validation/minlength": 16,
		"./components/validation/minlength.js": 16,
		"./components/validation/required": 14,
		"./components/validation/required.js": 14
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 1;


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _jquery = __webpack_require__(3);

	var _jquery2 = _interopRequireDefault(_jquery);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var NAME = 'form';
	var DEFAULTS = {
	  events: 'change',
	  selectors: '.input, select, .select, .textarea'
	};

	var Form = function () {
	  function Form(element, options) {
	    _classCallCheck(this, Form);

	    this._element = (0, _jquery2.default)(element);
	    this._options = _jquery2.default.extend({}, DEFAULTS, options || {});

	    this.bindListeners();

	    this.toggleFieldsActiveClass();
	  }

	  _createClass(Form, [{
	    key: 'bindListeners',
	    value: function bindListeners() {
	      (0, _jquery2.default)(document).on(this._options.events, this._options.selectors, this.onFieldChange.bind(this));
	    }
	  }, {
	    key: 'onFieldChange',
	    value: function onFieldChange(event) {
	      this.toggleActiveClass(event.target);
	    }
	  }, {
	    key: 'shouldInputBeActive',
	    value: function shouldInputBeActive(input) {
	      return !!(input.value || input.placeholder);
	    }
	  }, {
	    key: 'toggleActiveClass',
	    value: function toggleActiveClass(input) {
	      var $input = (0, _jquery2.default)(input),
	          $field = $input.parents('.field');

	      if (!$field.length) {
	        return;
	      }

	      if (!$field.hasClass('active') && this.shouldInputBeActive(input)) {
	        return $field.addClass('active');
	      }

	      if ($field.hasClass('active') && !this.shouldInputBeActive(input)) {
	        return $field.removeClass('active');
	      }
	    }
	  }, {
	    key: 'toggleFieldsActiveClass',
	    value: function toggleFieldsActiveClass() {
	      Array.prototype.forEach.call((0, _jquery2.default)(document).find(this._options.selectors), this.toggleActiveClass.bind(this));
	    }
	  }]);

	  return Form;
	}();

	/* istanbul ignore next */


	_jquery2.default.fn[NAME] = function (options) {
	  options = options || {};

	  return this.each(function () {
	    if (!_jquery2.default.data(this, NAME)) {
	      _jquery2.default.data(this, NAME, new Form(this, options));
	    }
	  });
	};

		exports.default = Form;

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = $;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _jquery = __webpack_require__(3);

	var _jquery2 = _interopRequireDefault(_jquery);

	var _throttle = __webpack_require__(5);

	var _throttle2 = _interopRequireDefault(_throttle);

	var _removeArrayLike = __webpack_require__(6);

	var _removeArrayLike2 = _interopRequireDefault(_removeArrayLike);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var NAME = 'lazyload';
	var DEFAULTS = {
	  throttle: 1000,
	  offset: 200,
	  selector: 'data-lazy'
	};

	var LazyLoad = function () {
	  function LazyLoad(element, options) {
	    _classCallCheck(this, LazyLoad);

	    this._element = (0, _jquery2.default)(element);
	    this._options = _jquery2.default.extend({}, DEFAULTS, options || {});
	  }

	  _createClass(LazyLoad, [{
	    key: 'init',
	    value: function init() {
	      this.bindListeners();
	      this.checkVisiblePlaceholders();

	      return this;
	    }
	  }, {
	    key: 'bindListeners',
	    value: function bindListeners() {
	      this.onScrollHandler = (0, _throttle2.default)(this.onScroll.bind(this), this._options.throttle);
	      (0, _jquery2.default)(window).on('scroll', this.onScrollHandler);
	    }
	  }, {
	    key: 'onScroll',
	    value: function onScroll() {
	      return this._element.length ? this.checkVisiblePlaceholders() : (0, _jquery2.default)(window).off('scroll', this.onScrollHandler);
	    }
	  }, {
	    key: 'checkVisiblePlaceholders',
	    value: function checkVisiblePlaceholders() {
	      this.windowHeight = (0, _jquery2.default)(window).height();
	      this.windowWidth = (0, _jquery2.default)(window).width();

	      Array.prototype.forEach.call(this._element, this.checkPlaceholder.bind(this));
	    }
	  }, {
	    key: 'checkPlaceholder',
	    value: function checkPlaceholder(placeholder) {
	      if (this.isPlaceholderVisible(placeholder)) {
	        this.renderImage(placeholder);
	        (0, _removeArrayLike2.default)(this._element, placeholder);
	      }
	    }
	  }, {
	    key: 'isPlaceholderVisible',
	    value: function isPlaceholderVisible(placeholder) {
	      return placeholder.getBoundingClientRect().top <= this.windowHeight + this._options.offset;
	    }
	  }, {
	    key: 'renderImage',
	    value: function renderImage(placeholder) {
	      placeholder.parentNode.replaceChild(this.createImage(placeholder), placeholder);
	    }
	  }, {
	    key: 'createImage',
	    value: function createImage(placeholder) {
	      var image = document.createElement('img');

	      this.parseAttributes(image, placeholder.attributes);

	      image.removeAttribute('data-lazy');

	      if (placeholder.getAttribute('data-srcset')) {
	        this.parseBreakpoints(image, placeholder.getAttribute('data-srcset'));

	        return image;
	      }

	      image.src = placeholder.getAttribute('data-src');

	      return image;
	    }
	  }, {
	    key: 'parseAttributes',
	    value: function parseAttributes(image, attributes) {
	      var _this = this;

	      Array.prototype.forEach.call(attributes, function (attr) {
	        if (attr.name !== _this._options.selector || attr.name !== 'data-srcset' || attr.name !== 'data-src') {
	          image.setAttribute(attr.name, attr.value);
	        }
	      });

	      return image;
	    }
	  }, {
	    key: 'parseBreakpoints',
	    value: function parseBreakpoints(image, breakpoints) {
	      image.removeAttribute('data-srcset');

	      breakpoints = breakpoints.split(',').map(function (breakpoint) {
	        breakpoint = breakpoint.trim().split(' ');

	        return {
	          src: breakpoint[0],
	          width: breakpoint[1]
	        };
	      }).sort(function (a, b) {
	        return b.width - a.width;
	      });

	      for (var i = 0; i < breakpoints.length; i++) {
	        var breakpoint = breakpoints[i];

	        if (breakpoint.width <= this.windowWidth) {
	          image.src = breakpoint.src;
	          break;
	        }
	      }

	      return image;
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      (0, _jquery2.default)(window).off('scroll', this.onScrollHandler);
	    }
	  }]);

	  return LazyLoad;
	}();

	/* istanbul ignore next */


	_jquery2.default.fn[NAME] = function (options) {
	  options = options || {};

	  return this.each(function () {
	    if (!_jquery2.default.data(this, NAME)) {
	      _jquery2.default.data(this, NAME, new LazyLoad(this, options).init());
	    }
	  });
	};

		exports.default = LazyLoad;

/***/ },
/* 5 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (fn, timer) {
	  var wait = true;

	  return function () {
	    if (wait) {
	      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	        args[_key] = arguments[_key];
	      }

	      fn.apply(this, args);

	      wait = false;

	      setTimeout(function () {
	        return wait = true;
	      }, timer);
	    }
	  };
		};

/***/ },
/* 6 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (arr, item) {
	  Array.prototype.splice.call(arr, Array.prototype.indexOf.call(arr, item));
		};

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _jquery = __webpack_require__(3);

	var _jquery2 = _interopRequireDefault(_jquery);

	var _transitionend = __webpack_require__(8);

	var _transitionend2 = _interopRequireDefault(_transitionend);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var NAME = 'modal';

	var templates = {
	  modal: '<div class="modal"></div>',
	  close: '<i class="modal-close glyph glyph-x"></i>',
	  content: '<div class="modal-content"><div class="modal-body"></div></div>'
	};

	var DEFAULTS = {
	  container: 'body',
	  triggerClose: null
	};

	var Modal = function () {
	  function Modal(element, options) {
	    _classCallCheck(this, Modal);

	    this._element = element instanceof _jquery2.default ? element : (0, _jquery2.default)(element);
	    this._options = _jquery2.default.extend({}, DEFAULTS, options || {});
	  }

	  _createClass(Modal, [{
	    key: 'init',
	    value: function init() {
	      this._createModal();

	      return this;
	    }
	  }, {
	    key: 'show',
	    value: function show() {
	      this.bindListeners();
	      this._showModal();
	    }
	  }, {
	    key: 'hide',
	    value: function hide() {
	      this.unbindListeners();
	      this._hideModal();
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      this._element.removeData(NAME);
	      this.modal.remove();
	    }
	  }, {
	    key: 'bindListeners',
	    value: function bindListeners() {
	      var _this = this;

	      if (this._options.triggerClose) {
	        this.modal.on('click', this._options.triggerClose, this.hide.bind(this));
	      }

	      this.close.on('click', this.hide.bind(this));

	      (0, _jquery2.default)(window).on('keyup', this.handler = function (e) {
	        if (e.which === 27) {
	          _this.hide();
	        }
	      });
	    }
	  }, {
	    key: 'unbindListeners',
	    value: function unbindListeners() {
	      if (this._options.triggerClose) {
	        this.modal.off('click', this._options.triggerClose, this.hide.bind(this));
	      }

	      this.close.off('click');
	      (0, _jquery2.default)(window).off('keyup', this.handler);
	    }
	  }, {
	    key: '_showModal',
	    value: function _showModal() {
	      var _this2 = this;

	      this.modal.addClass('modal-enter');
	      this.content.addClass('modal-content-enter');

	      window.setTimeout(function () {
	        _this2.modal.addClass('modal-show');
	        _this2.content.addClass('modal-content-show');
	      }, 300);
	    }
	  }, {
	    key: '_hideModal',
	    value: function _hideModal() {
	      var _this3 = this;

	      this.content.removeClass('modal-content-show').addClass('modal-content-leave');

	      this.modal.removeClass('modal-show').addClass('modal-leave');

	      window.setTimeout(function () {
	        _this3.modal.removeClass('modal-enter modal-leave');
	        _this3.content.removeClass('modal-content-enter modal-content-leave');
	      }, 200);
	    }
	  }, {
	    key: '_fillModal',
	    value: function _fillModal() {
	      this.content.find('.modal-body').append(this._element.html());
	    }
	  }, {
	    key: '_createModal',
	    value: function _createModal() {
	      this.modal = (0, _jquery2.default)(templates.modal);
	      this.content = (0, _jquery2.default)(templates.content);
	      this.close = (0, _jquery2.default)(templates.close);

	      this.content.append(this.close);
	      this.modal.append(this.content);

	      (0, _jquery2.default)(this._options.container).append(this.modal);

	      this._fillModal();
	    }
	  }]);

	  return Modal;
	}();

	/* istanbul ignore next */


	_jquery2.default.fn[NAME] = function (options) {
	  options = options || {};

	  return this.each(function () {
	    if (!_jquery2.default.data(this, NAME)) {
	      _jquery2.default.data(this, NAME, new Modal(this, options).init());
	    }
	  });
	};

		exports.default = Modal;

/***/ },
/* 8 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function () {
	  var eventNames = {
	    WebkitTransition: 'webkitTransitionEnd',
	    MozTransition: 'transitionend',
	    OTransition: 'oTransitionEnd otransitionend',
	    msTransition: 'MsTransitionEnd',
	    transition: 'transitionend'
	  };

	  var el = document.createElement('div');

	  for (var transition in eventNames) {
	    if (el.style[transition] !== undefined) {
	      return eventNames[transition];
	    }
	  }
		};

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _jquery = __webpack_require__(3);

	var _jquery2 = _interopRequireDefault(_jquery);

	var _transitionend = __webpack_require__(8);

	var _transitionend2 = _interopRequireDefault(_transitionend);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var NAME = 'notification';

	var DEFAULTS = {
	  autoHide: false,
	  closeButton: '.' + NAME + '-close',
	  dynamic: true,
	  hideIn: 3000,
	  message: null,
	  showIn: 1000,
	  type: 'primary'
	};

	var classNames = {
	  hide: NAME + '-hide',
	  show: NAME + '-show',
	  enter: NAME + '-enter',
	  leave: NAME + '-leave',
	  close: NAME + '-close'
	};

	var templates = {
	  box: '<div class="' + NAME + ' ' + classNames.enter + '"></div>',
	  close: '<i class="' + classNames.close + ' glyph glyph-x"></i>'
	};

	var Notification = function () {
	  function Notification(element, options) {
	    _classCallCheck(this, Notification);

	    this.$element = element instanceof _jquery2.default ? element : (0, _jquery2.default)(element);
	    this._options = _jquery2.default.extend({}, DEFAULTS, options);
	  }

	  /**
	   * Init notification, insert notifiction into DOM, bind close button and
	   * show notifiction based on showIn config
	   */


	  _createClass(Notification, [{
	    key: 'init',
	    value: function init() {
	      var _this = this;

	      this._createNotification();
	      this.bindListeners();

	      if (!this._options.dynamic) {
	        return this;
	      }

	      window.setTimeout(function () {
	        _this.show();
	      }, this._options.showIn);

	      return this;
	    }

	    /**
	     * Bind close button
	     */

	  }, {
	    key: 'bindListeners',
	    value: function bindListeners() {
	      var _this2 = this;

	      this.closeHandler = function () {
	        _this2.hide();
	      };

	      this.close.on('click', this.closeHandler);
	    }

	    /**
	     * show notification, if autoHide is true, hide box after hideIn timing config
	     */

	  }, {
	    key: 'show',
	    value: function show() {
	      var _this3 = this;

	      this.box.addClass(classNames.show).removeClass(classNames.hide);

	      if (this._options.autoHide) {
	        window.setTimeout(function () {
	          _this3.hide();
	        }, this._options.hideIn);
	      }
	    }

	    /**
	     * hide notification and after hide animation finish, add display: none to element
	     */

	  }, {
	    key: 'hide',
	    value: function hide() {
	      var _this4 = this;

	      this.box.removeClass(classNames.show).addClass(classNames.leave);

	      this.box.on((0, _transitionend2.default)(), function () {
	        _this4.box.addClass(classNames.hide).removeClass(classNames.enter).removeClass(classNames.leave);
	      });
	    }

	    /**
	     * Remove data from $element, unbind close button and remove box from DOM
	     */

	  }, {
	    key: 'destroy',
	    value: function destroy() {
	      this.$element.removeData(NAME);
	      this.close.off('click', this.closeHandler);
	      this.box.remove();
	    }

	    /**
	     * Add notification class, append close button and message
	     */

	  }, {
	    key: '_createNotification',
	    value: function _createNotification() {

	      if (!this._options.dynamic) {
	        this.box = this.$element;
	        this._createCloseButton();

	        return;
	      }

	      if (!this._options.message) {
	        return;
	      }

	      this.box = (0, _jquery2.default)(templates.box);
	      this.box.addClass(NAME + '-' + this._options.type);
	      this.box.html(this._options.message);

	      this._createCloseButton();
	      this.$element.append(this.box);
	    }
	  }, {
	    key: '_createCloseButton',
	    value: function _createCloseButton() {
	      if (!this._options.dynamic) {
	        return this.close = this.box.find(this._options.closeButton);
	      }

	      this.close = (0, _jquery2.default)(templates.close);
	      this.box.append(this.close);
	    }
	  }]);

	  return Notification;
	}();

	/* istanbul ignore next */


	_jquery2.default.fn[NAME] = function (options) {
	  options = options || {};

	  return this.each(function () {
	    if (!_jquery2.default.data(this, NAME)) {
	      _jquery2.default.data(this, NAME, new Notification(this, options).init());
	    }
	  });
	};

		exports.default = Notification;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _jquery = __webpack_require__(3);

	var _jquery2 = _interopRequireDefault(_jquery);

	var _emitter = __webpack_require__(11);

	var _emitter2 = _interopRequireDefault(_emitter);

	var _defaults = __webpack_require__(13);

	var _defaults2 = _interopRequireDefault(_defaults);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var NAME = 'validation';
	var DEFAULTS = {
	  events: 'blur',
	  selector: '[data-required]'
	};

	var Validation = function () {
	  function Validation(element, options) {
	    _classCallCheck(this, Validation);

	    this._element = (0, _jquery2.default)(element);
	    this._options = _jquery2.default.extend({}, DEFAULTS, options || {});
	  }

	  _createClass(Validation, [{
	    key: 'init',
	    value: function init() {
	      this._fields = this._element.find(this._options.selector);

	      this.bindListeners();

	      return this;
	    }
	  }, {
	    key: 'bindListeners',
	    value: function bindListeners() {
	      var _this = this;

	      this.handler = function (e) {
	        _this.validate(e.target);
	      };

	      this._element.off(this._options.events, this._options.selector, this.handler);
	      this._element.on(this._options.events, this._options.selector, this.handler);
	    }
	  }, {
	    key: 'validate',
	    value: function validate(field) {
	      var _this2 = this;

	      var rules = field.getAttribute('data-validate');

	      if (!rules) {
	        return;
	      }

	      rules = rules.split(' ').reduce(function (errors, rule) {
	        if (!_this2.rules[rule].call(_this2, field, _this2._element)) {
	          errors.push(rule);
	        }

	        return errors;
	      }, []);

	      _emitter2.default.emit('validation:' + (!rules.length ? 'success' : 'error'), field, rules);

	      return !rules.length;
	    }
	  }, {
	    key: 'validateAll',
	    value: function validateAll() {
	      return Array.prototype.map.call(this._element.find(this._options.selector), this.validate, this).every(function (validation) {
	        return validation;
	      });
	    }
	  }]);

	  return Validation;
	}();

	Validation.prototype.rules = _defaults2.default;

	/* istanbul ignore next */
	_jquery2.default.fn[NAME] = function (options) {
	  options = options || {};

	  return this.each(function () {
	    if (!_jquery2.default.data(this, NAME)) {
	      _jquery2.default.data(this, NAME, new Validation(this, options).init());
	    }
	  });
	};

		exports.default = Validation;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _events = __webpack_require__(12);

	var _events2 = _interopRequireDefault(_events);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		exports.default = new _events2.default();

/***/ },
/* 12 */
/***/ function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	function EventEmitter() {
	  this._events = this._events || {};
	  this._maxListeners = this._maxListeners || undefined;
	}
	module.exports = EventEmitter;

	// Backwards-compat with node 0.10.x
	EventEmitter.EventEmitter = EventEmitter;

	EventEmitter.prototype._events = undefined;
	EventEmitter.prototype._maxListeners = undefined;

	// By default EventEmitters will print a warning if more than 10 listeners are
	// added to it. This is a useful default which helps finding memory leaks.
	EventEmitter.defaultMaxListeners = 10;

	// Obviously not all Emitters should be limited to 10. This function allows
	// that to be increased. Set to zero for unlimited.
	EventEmitter.prototype.setMaxListeners = function(n) {
	  if (!isNumber(n) || n < 0 || isNaN(n))
	    throw TypeError('n must be a positive number');
	  this._maxListeners = n;
	  return this;
	};

	EventEmitter.prototype.emit = function(type) {
	  var er, handler, len, args, i, listeners;

	  if (!this._events)
	    this._events = {};

	  // If there is no 'error' event listener then throw.
	  if (type === 'error') {
	    if (!this._events.error ||
	        (isObject(this._events.error) && !this._events.error.length)) {
	      er = arguments[1];
	      if (er instanceof Error) {
	        throw er; // Unhandled 'error' event
	      }
	      throw TypeError('Uncaught, unspecified "error" event.');
	    }
	  }

	  handler = this._events[type];

	  if (isUndefined(handler))
	    return false;

	  if (isFunction(handler)) {
	    switch (arguments.length) {
	      // fast cases
	      case 1:
	        handler.call(this);
	        break;
	      case 2:
	        handler.call(this, arguments[1]);
	        break;
	      case 3:
	        handler.call(this, arguments[1], arguments[2]);
	        break;
	      // slower
	      default:
	        args = Array.prototype.slice.call(arguments, 1);
	        handler.apply(this, args);
	    }
	  } else if (isObject(handler)) {
	    args = Array.prototype.slice.call(arguments, 1);
	    listeners = handler.slice();
	    len = listeners.length;
	    for (i = 0; i < len; i++)
	      listeners[i].apply(this, args);
	  }

	  return true;
	};

	EventEmitter.prototype.addListener = function(type, listener) {
	  var m;

	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');

	  if (!this._events)
	    this._events = {};

	  // To avoid recursion in the case that type === "newListener"! Before
	  // adding it to the listeners, first emit "newListener".
	  if (this._events.newListener)
	    this.emit('newListener', type,
	              isFunction(listener.listener) ?
	              listener.listener : listener);

	  if (!this._events[type])
	    // Optimize the case of one listener. Don't need the extra array object.
	    this._events[type] = listener;
	  else if (isObject(this._events[type]))
	    // If we've already got an array, just append.
	    this._events[type].push(listener);
	  else
	    // Adding the second element, need to change to array.
	    this._events[type] = [this._events[type], listener];

	  // Check for listener leak
	  if (isObject(this._events[type]) && !this._events[type].warned) {
	    if (!isUndefined(this._maxListeners)) {
	      m = this._maxListeners;
	    } else {
	      m = EventEmitter.defaultMaxListeners;
	    }

	    if (m && m > 0 && this._events[type].length > m) {
	      this._events[type].warned = true;
	      console.error('(node) warning: possible EventEmitter memory ' +
	                    'leak detected. %d listeners added. ' +
	                    'Use emitter.setMaxListeners() to increase limit.',
	                    this._events[type].length);
	      if (typeof console.trace === 'function') {
	        // not supported in IE 10
	        console.trace();
	      }
	    }
	  }

	  return this;
	};

	EventEmitter.prototype.on = EventEmitter.prototype.addListener;

	EventEmitter.prototype.once = function(type, listener) {
	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');

	  var fired = false;

	  function g() {
	    this.removeListener(type, g);

	    if (!fired) {
	      fired = true;
	      listener.apply(this, arguments);
	    }
	  }

	  g.listener = listener;
	  this.on(type, g);

	  return this;
	};

	// emits a 'removeListener' event iff the listener was removed
	EventEmitter.prototype.removeListener = function(type, listener) {
	  var list, position, length, i;

	  if (!isFunction(listener))
	    throw TypeError('listener must be a function');

	  if (!this._events || !this._events[type])
	    return this;

	  list = this._events[type];
	  length = list.length;
	  position = -1;

	  if (list === listener ||
	      (isFunction(list.listener) && list.listener === listener)) {
	    delete this._events[type];
	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);

	  } else if (isObject(list)) {
	    for (i = length; i-- > 0;) {
	      if (list[i] === listener ||
	          (list[i].listener && list[i].listener === listener)) {
	        position = i;
	        break;
	      }
	    }

	    if (position < 0)
	      return this;

	    if (list.length === 1) {
	      list.length = 0;
	      delete this._events[type];
	    } else {
	      list.splice(position, 1);
	    }

	    if (this._events.removeListener)
	      this.emit('removeListener', type, listener);
	  }

	  return this;
	};

	EventEmitter.prototype.removeAllListeners = function(type) {
	  var key, listeners;

	  if (!this._events)
	    return this;

	  // not listening for removeListener, no need to emit
	  if (!this._events.removeListener) {
	    if (arguments.length === 0)
	      this._events = {};
	    else if (this._events[type])
	      delete this._events[type];
	    return this;
	  }

	  // emit removeListener for all listeners on all events
	  if (arguments.length === 0) {
	    for (key in this._events) {
	      if (key === 'removeListener') continue;
	      this.removeAllListeners(key);
	    }
	    this.removeAllListeners('removeListener');
	    this._events = {};
	    return this;
	  }

	  listeners = this._events[type];

	  if (isFunction(listeners)) {
	    this.removeListener(type, listeners);
	  } else if (listeners) {
	    // LIFO order
	    while (listeners.length)
	      this.removeListener(type, listeners[listeners.length - 1]);
	  }
	  delete this._events[type];

	  return this;
	};

	EventEmitter.prototype.listeners = function(type) {
	  var ret;
	  if (!this._events || !this._events[type])
	    ret = [];
	  else if (isFunction(this._events[type]))
	    ret = [this._events[type]];
	  else
	    ret = this._events[type].slice();
	  return ret;
	};

	EventEmitter.prototype.listenerCount = function(type) {
	  if (this._events) {
	    var evlistener = this._events[type];

	    if (isFunction(evlistener))
	      return 1;
	    else if (evlistener)
	      return evlistener.length;
	  }
	  return 0;
	};

	EventEmitter.listenerCount = function(emitter, type) {
	  return emitter.listenerCount(type);
	};

	function isFunction(arg) {
	  return typeof arg === 'function';
	}

	function isNumber(arg) {
	  return typeof arg === 'number';
	}

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}

	function isUndefined(arg) {
	  return arg === void 0;
	}


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _required = __webpack_require__(14);

	var _required2 = _interopRequireDefault(_required);

	var _confirm = __webpack_require__(15);

	var _confirm2 = _interopRequireDefault(_confirm);

	var _minlength = __webpack_require__(16);

	var _minlength2 = _interopRequireDefault(_minlength);

	var _maxlength = __webpack_require__(17);

	var _maxlength2 = _interopRequireDefault(_maxlength);

	var _email = __webpack_require__(18);

	var _email2 = _interopRequireDefault(_email);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	  required: _required2.default,
	  confirm: _confirm2.default,
	  minlength: _minlength2.default,
	  maxlength: _maxlength2.default,
	  email: _email2.default
	};

/***/ },
/* 14 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (field, $form) {
	  if (field.type === 'checkbox') {
	    return field.checked;
	  }

	  if (field.type === 'radio') {
	    return $form.find('[name="' + field.name + '"]:checked').length;
	  }

	  return !!field.value.trim();
		};

/***/ },
/* 15 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (field, $form) {
	  return field.value === $form.find('[name="' + field.getAttribute('data-confirm') + '"]').val();
		};

/***/ },
/* 16 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (field) {
	  return field.value.length >= field.getAttribute('data-minlength');
		};

/***/ },
/* 17 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (field) {
	  return field.value.length <= field.getAttribute('maxlength');
		};

/***/ },
/* 18 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (field) {
	  return (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(field.value)
	  );
		};

/***/ }
/******/ ]);
//# sourceMappingURL=garden.min.js.map